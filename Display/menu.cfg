[menu __main __octoprint]
type: list
name: Mainsail

[menu __main __octoprint __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause printing
gcode:
    PAUSE

[menu __main __octoprint __resume]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Resume printing
gcode:
    RESUME

[menu __main __octoprint __abort]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Abort printing
gcode:
    CANCEL_PRINT

[menu __main __filament __clean]
type: command
name: Clean Nozzle
gcode:
    CLEAN_NOZZLE

[menu __main __control __filterspeed]
type: input
enable: {'fan_generic filter' in printer}
name: Filter %:   {'%3d' % (menu.input*100) if menu.input else 'OFF'}
input: {printer["fan_generic filter"].speed}
input_min: 0
input_max: 1
input_step: 0.1
gcode:
    SET_FAN_SPEED FAN=filter SPEED={menu.input}

[menu __main __control __exhausttemp]
type: input
enable: {'temperature_fan chamber' in printer}
name: Chamber:    {'%2dC' % (menu.input) if menu.input else 'OFF'}
input: {printer['temperature_fan chamber'].target}
input_min: {printer.configfile.settings['temperature_fan chamber'].min_temp|int}
input_max: {printer.configfile.settings['temperature_fan chamber'].max_temp|int}
input_step: 1
gcode: 
    SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber TARGET={menu.input}

[menu __main __control __caselightonoff]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'ON ' if menu.input else 'OFF'}
input: {printer['output_pin caselight'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_PIN PIN=caselight VALUE={1 if menu.input else 0}


[menu __main __control __caselightpwm]
type: input
enable: false
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.01
gcode:
    SET_PIN PIN=caselight VALUE={menu.input}